You are an expert Python developer and machine learning engineer. Write a complete, modular Python program (with clear functions or classes) that can create, train, and evaluate several deep learning and ensemble models for short-term (5â€“20 minute) cryptocurrency price prediction. The target variable should be the price (or price change) in the next 5 to 20 minutes. The program should: 1. Accept a CSV file with high-frequency price data, including at minimum these columns: Timestamp, Open, High, Low, Close, Volume. 2. Allow optional inclusion of additional features (other CSV columns), such as technical indicators, engineered factors, so that models can be flexibly trained/tested with these features. 3. Provide configurable prediction horizons (e.g., 5, 10, 15, and 20 minutes ahead). Implement these models: * Standard LSTM (univariate or multivariate based on selected features) * CNN-LSTM hybrid * Transformer-based time series model * LSTM + XGBoost ensemble (e.g., with stacking or meta-learning) * (Optional, if time/space allows) A simple deep RL (Reinforcement Learning) agent for short-term trading signal generation Each model should: * Have its own training, validation, and forecast pipeline * Output key metrics (MAE, RMSE, R2) on a held-out test set for each prediction horizon * Easily be switched on/off for comparative experiments. The code should be well-commented, use standard Python (preferably PyTorch or TensorFlow/Keras, XGBoost for the ensemble), and include clear instructions on how to add new features or modify the horizon. Organize the program so future researchers can extend it for additional model types or feature groups. Generate the entire code, ready to run with sample placeholders and sections for data loading, preprocessing, training, and evaluation.
Do not use synthetic sample data. 